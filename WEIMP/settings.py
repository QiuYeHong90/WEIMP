# coding=utf-8
"""
Django settings for pythonServer project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# APPVERSION = 1   1正式服 2 笔记本 3 公司mac本地
APPVERSION = 3

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%q@1q%-06tk0)&l^)^rhree3*tu)v8wi26#pp5-w1e=43f%*b0'

# SECURITY WARNING: don't run with debug turned on in production!

# 192.168.1.107


APPEND_SLASH = False
# /Users/jjn/Desktop/MyWork/trunk

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'WeiMpian'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.middleware.csrf.CsrfResponseMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WEIMP.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + "/templates/", ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WEIMP.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
#



# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
SENDFILE_BACKEND = 'sendfile.backends.development'
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# http://www.8848fit.com/

if APPVERSION == 3:
    HOST_NAME = '192.168.1.21:8080'
else:
    HOST_NAME = '54.222.163.123:8006'

HERE = os.path.dirname(os.path.dirname(__file__))

if APPVERSION == 3:
    STATICFILES_DIRS = (
        os.path.join(os.path.dirname(__file__), '../static/').replace('\\', '/'),
        os.path.join(BASE_DIR, 'WeiMpian/imagePath/upload').replace('\\', '/'),
        os.path.join(BASE_DIR, 'WeiMpian/../static/fileImage/kpBgImg').replace('\\', '/'),
        os.path.join(BASE_DIR, 'WeiMpian/../static/fileImage/system').replace('\\', '/'),
    )
else:
    STATICFILES_DIRS = (
        os.path.join(os.path.dirname(__file__), '../static/').replace('\\', '/'),
        os.path.join(HERE, 'WeiMpian/imagePath/upload').replace('\\', '/'),
        os.path.join(HERE, 'WeiMpian/../static/fileImage/kpBgImg').replace('\\', '/'),
        os.path.join(HERE, 'WeiMpian/../static/fileImage/system').replace('\\', '/'),
    )

# UPLOAD_SYSTEM_ROOT 系统上传的图片目录
#       UPLOAD_ROOT 用户上传的图片目录
if APPVERSION == 1:
    QRCODE_PATH = os.path.join(BASE_DIR, 'WeiMpian/QRCode/').replace('\\', '/'),
    ALLOWED_HOSTS = ['localhost']
    UPLOAD_ROOT =  os.path.join(BASE_DIR, 'WeiMpian/imagePath/upload').replace('\\', '/'),
    UPLOAD_SYSTEM_ROOT =BASE_DIR+'WeiMpian/fileImage/system'
    DEBUG = False
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'WeiMpian',
            'USER': 'root',
            'PASSWORD': 'jjn67031828',
            'HOST': '127.0.0.1',
            'PORT': '3306',
        }

    }

elif APPVERSION == 2:
    QRCODE_PATH = BASE_DIR+'WeiMpian/QRCode/'
    ALLOWED_HOSTS = ['localhost']
    UPLOAD_ROOT = BASE_DIR+'WeiMpian/imagePath/upload'
    UPLOAD_SYSTEM_ROOT = BASE_DIR+'WeiMpian/fileImage/system'
    DEBUG = True
    DATABASES = {
        'default': {

            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'weimingpian',
            'USER': 'root',
            'PASSWORD': 'root',
            'HOST': '127.0.0.1',
            'PORT': '3306',
        }

    }

else:
    QRCODE_PATH = BASE_DIR+'/static/QRCode/'
    ALLOWED_HOSTS = ['localhost', '192.168.1.21','127.0.0.1']
    UPLOAD_ROOT = BASE_DIR+'/static/imagePath/upload'
    UPLOAD_SYSTEM_ROOT = BASE_DIR+'static/fileImage/system'
    DEBUG = True
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }


    }

STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')
# 这个是默认设置，Django 默认会在 STATICFILES_DIRS中的文件夹 和 各app下的static文件夹中找文件
# 注意有先后顺序，找到了就不再继续找了
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)

print  UPLOAD_ROOT
print  os.path.join(BASE_DIR, 'db.sqlite3')